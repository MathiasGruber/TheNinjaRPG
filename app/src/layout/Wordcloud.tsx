"use client";

import React from "react";
import ReactWordcloud from "react-wordcloud";

interface WordCloudProps {
  text: string | undefined;
}

const WordCloud: React.FC<WordCloudProps> = (props) => {
  // Reduce to word frequency
  const stopWords = [
    "and",
    "the",
    "of",
    "in",
    "with",
    "their",
    "they",
    "to",
    "a",
    "is",
    "for",
    "her",
    "him",
    "by",
    "through",
    "into",
    "that",
    "this",
    "them",
    "as",
    "these",
    "from",
    "who",
    "its",
    "within",
    "an",
    "p",
    "are",
    "his",
    "on",
    "at",
    "be",
    "or",
    "it",
    "s",
    "was",
    "which",
    "will",
    "have",
    "has",
    "not",
    "but",
    "also",
    "can",
    "could",
    "would",
    "should",
    "may",
    "might",
    "shall",
    "must",
    "do",
    "does",
    "did",
    "done",
    "doing",
    "am",
    "are",
    "is",
    "was",
    "were",
    "be",
    "been",
    "being",
    "have",
    "has",
    "had",
    "having",
    "will",
    "would",
    "shall",
    "should",
    "may",
    "might",
    "must",
    "can",
    "could",
    "do",
    "does",
    "did",
    "doing",
    "a",
    "an",
    "the",
    "and",
    "but",
    "if",
    "or",
    "because",
    "as",
    "until",
    "while",
    "of",
    "at",
    "by",
    "for",
    "with",
    "about",
    "against",
    "between",
    "into",
    "through",
    "during",
    "before",
    "after",
    "above",
    "below",
    "to",
    "from",
    "up",
    "down",
    "in",
    "out",
    "on",
    "off",
    "over",
    "under",
    "again",
    "further",
    "then",
    "once",
    "here",
    "there",
    "when",
    "where",
    "why",
    "how",
    "all",
    "any",
    "both",
    "each",
    "few",
    "more",
    "most",
    "other",
    "some",
    "such",
    "no",
    "nor",
    "not",
    "only",
    "own",
    "same",
    "so",
    "than",
    "too",
    "very",
    "s",
    "t",
    "can",
    "will",
    "just",
    "don",
    "should",
    "now",
    "d",
    "ll",
    "m",
    "o",
    "re",
    "ve",
    "y",
    "ain",
    "aren",
    "couldn",
    "didn",
    "doesn",
    "hadn",
    "hasn",
    "haven",
    "isn",
    "ma",
    "mightn",
    "mustn",
    "needn",
    "shan",
    "shouldn",
    "wasn",
    "weren",
    "won",
    "wouldn",
    "i",
    "me",
    "my",
    "myself",
    "we",
    "our",
    "ours",
    "ourselves",
    "you",
    "your",
    "new",
    "user",
    "opponent",
    "enemy",
    "description",
    "target",
    "jutsu",
  ];
  const wordCounts = (props.text || "")
    .split(" ")
    .map((token) => token.toLowerCase().replace(/[^\w\s]/g, ""))
    .filter((token) => !stopWords.includes(token))
    .reduce<Record<string, number>>((acc, curr) => {
      acc[curr] = (acc[curr] || 0) + 1;
      return acc;
    }, {});
  const words = Object.entries(wordCounts).map(([text, value]) => ({ text, value }));
  return (
    <div>
      <ReactWordcloud words={words} />
    </div>
  );
};

export default WordCloud;
