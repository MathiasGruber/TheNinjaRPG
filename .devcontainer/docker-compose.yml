services:
  ####################################
  ## Services for local development ##
  ####################################

  # MySQL database - Local placeholder for PlanetScale service
  db:
    container_name: tnr_mysql
    image: mysql:latest
    restart: always
    env_file:
      - .env
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql

  # PHPMyAdmin - local database management
  phpmyadmin:
    container_name: tnr_phpmyadmin
    image: phpmyadmin:latest
    restart: always
    ports:
      - "3001:80"
    env_file:
      - .env
    depends_on:
      - db
    networks:
      - default

  # Planetscale - local http proxy replacement
  planetscale:
    container_name: tnr_planetscale
    image: ghcr.io/mattrobenolt/ps-http-sim:latest
    command: ["-listen-port=8080", "-mysql-dbname=tnr", "-mysql-addr=db", "-mysql-idle-timeout=1s"]
    depends_on:
      - db
    ports:
      - 3002:8080
    environment:
      - MYSQL_URL=mysql://tnr:placeholder@db:3306/tnr
      - PORT=8080

  # Redis server - Local placeholder for Upstash service
  redis:
    container_name: tnr_redis
    image: redis
    restart: always
    ports:
      - "6379:6379"
  serverless-redis-http:
    container_name: tnr_redis_http
    image: hiett/serverless-redis-http:latest
    restart: always
    ports:
      - "8079:80"
    environment:
      SRH_MODE: env
      SRH_TOKEN: placeholder
      SRH_CONNECTION_STRING: "redis://redis:6379" # Using `redis` hostname since they're in the same Docker network.

  # SocketI server for websockets - Local Placeholder for deployed socketi deployment
  socketi:
    container_name: tnr_socketi
    image: quay.io/soketi/soketi:1.4-16-debian
    restart: always
    ports:
      - "6001:6001"
      - "9601:9601"

  ###############################################################
  ## PROXY for https on certain services, e.g. upstash mocking ##
  ###############################################################
  proxy:
    container_name: tnr_nginx
    restart: always
    image: nanomathias/nginx-local-ssl:release-1.0.1
    ports:
      - "3003:3003" # Upstash
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/mysite.template:ro
    env_file:
      - .env
    environment:
      - DOLLAR=$$
    depends_on:
      - serverless-redis-http
    # Insert env variables,
    # see: https://serverfault.com/questions/577370/how-can-i-use-environment-variables-in-nginx-conf
    command: sh -c "echo 'Substituting env vars, and starting nginx' && envsubst < /etc/nginx/conf.d/mysite.template > /etc/nginx/conf.d/default.conf && exec nginx -g 'daemon off;'"

volumes:
  mysql_data:
